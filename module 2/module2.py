# -*- coding: utf-8 -*-
"""Module2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16pH_TqkopsMXfMGs0PxlnNNLX0OTruNJ

# Module 2: Exploration of preprocessed and validated data and data visualization
"""


#import library packages
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

#warnings
import warnings
warnings.filterwarnings('ignore')

#load dataset
data = pd.read_csv("C:\\Users\\User\\Desktop\\fproject\\dataset\\liver_patient.csv")

data.describe()

data.head()

data.shape

data.size

data.duplicated()

data.duplicated().sum()

data = data.drop_duplicates()

data.size

data.shape

data.duplicated().sum()

df=data.dropna()

df.shape

df.size

df.isnull().sum()

df.columns

#changing feature name
df = df.rename({'Dataset': 'Result'}, axis=1)

df['Result'].describe()

df['Result'].unique()

pd.Categorical(df['Result']).describe()

plt.figure(figsize=(12,7))
sns.countplot(x='Result',data=df)

df1 = df[df["Result"]==1]
df2 = df[df["Result"]==2]

df2

df1

plt.figure(figsize=(8,6))

plt.xlabel("")
plt.hist(df["Gender"],color="red")
plt.title("All category")
plt.show()

df.Result.unique()

plt.figure(figsize=(10,4))
plt.subplot(1, 2, 1)
plt.hist(df1["Gender"],color="green")
plt.title("Affected people")


plt.subplot(1, 2, 2)
plt.hist(df2["Gender"],color="orange")
plt.title("Not Affected people")

plt.show()

plt.scatter(df["Albumin"],df["Total_Protiens"])

df.head()

plt.figure(figsize=(12,6))
plt.plot(df["Albumin_and_Globulin_Ratio"])
plt.show()

boxplot = df.boxplot(column=['Total_Protiens'], by="Result",figsize=(8,6),  fontsize=15)
boxplot = df.boxplot(column=['Albumin_and_Globulin_Ratio'], by="Result",figsize=(8,6),  fontsize=15)
plt.show()

plt.figure(figsize=(10,5))
plt.subplot(1,2,1)
plt.scatter(df["Albumin_and_Globulin_Ratio"],df["Result"],color="red")
plt.subplot(1,2,2)
plt.scatter(df["Albumin"],df["Result"],color="red")
plt.show()

from sklearn.preprocessing import LabelEncoder
var_mod = ['Result']
le = LabelEncoder()
for i in var_mod:
    df[i] = le.fit_transform(df[i]).astype(int)

var_mod = {'Gender'}
le = LabelEncoder()
for i in var_mod:
    df[i] = le.fit_transform(df[i]).astype(int)

df.columns

# Heatmap plot diagram
fig, ax = plt.subplots(figsize=(18,13))
sns.heatmap(df.corr(), ax=ax, annot=True)
